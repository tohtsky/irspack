name: Build
on:
  push:
  release:
    types:
      - created
env:
  cibuildwheel_version: '3.0.1'
jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.13'
      - name: Build sdist
        run: pip install pybind11 setuptools_scm && python setup.py sdist
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ENVIRONMENT: "${{ matrix.cibw.env || '' }}"
    strategy:
      matrix:
        include:
          - os: linux-intel
            runs-on: ubuntu-latest
            cibw:
              cflags: '-march=core-avx-i'
          - os: linux-arm
            runs-on: ubuntu-24.04-arm
            cibw:
              cflags: ''
#          - os: windows-intel
#            runs-on: windows-latest
#            cibw:
#              cflags: ''
#          - os: windows-arm
#            runs-on: windows-11-arm
#            cibw:
#              cflags: ''
#          - os: macos-intel
#            runs-on: macos-13
#            cibw:
#              cflags: ''
#          - os: macos-arm
#            runs-on: macos-latest
#            cibw:
#              cflags: ''
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: python
        with:
          python-version: "3.11 - 3.13"
          update-environment: false

      - name: Build wheels
        env:
          CIBW_PLATFORM: ${{ matrix.platform || 'auto' }}
          CFLAGS: ${{ matrix.cibw.cflags }}
          CIBW_BEFORE_ALL: 'uname -a'
        run: |
          pip install --upgrade pip
          pip install cibuildwheel==3.0.1
          mkdir wheelhouse
          cibuildwheel --output-dir wheelhouse
          ls wheelhouse
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_APITOKEN }}
          packages_dir: dist/
          repository_url: https://test.pypi.org/legacy/
          verbose: true
          skip_existing: true
      - name: Publish package to PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_APITOKEN }}
          packages_dir: dist/
          verbose: true
          skip_existing: true
