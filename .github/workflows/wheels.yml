name: Build
on:
  push:
    branches:
      - main
  release:
    types:
      - created
env:
  cibuildwheel_version: '3.0.1'
jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.13'
      - name: Build sdist
        run: pip install build && python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - os: linux-intel
            runs-on: ubuntu-latest
            cibw:
              cflags: '-march=core-avx-i'
          - os: linux-arm
            runs-on: ubuntu-24.04-arm
            cibw:
              cflags: ''
          - os: windows-intel
            runs-on: windows-latest
            cibw:
              cflags: ''
          - os: macos-intel
            runs-on: macos-13
            cibw:
              cflags: ''
          - os: macos-arm
            runs-on: macos-latest
            cibw:
              cflags: ''
    steps:
      - uses: actions/checkout@v4
        with:
          submodule: recursive
          fetch-depth: 0
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.1
        env:
          CIBW_PLATFORM: ${{ matrix.platform || 'auto' }}
          CFLAGS: ${{ matrix.cibw.cflags }}
          CXXFLAGS: ${{ matrix.cibw.cflags }}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: dist/
          repository_url: https://test.pypi.org/legacy/
          verbose: true
          skip_existing: true
      - name: Publish package to PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: dist/
          verbose: true
          skip_existing: true
